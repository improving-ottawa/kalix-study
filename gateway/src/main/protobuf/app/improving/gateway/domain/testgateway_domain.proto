syntax = "proto3";

package app.improving.gateway;

import "common_api.proto";
import "app/improving/gateway/domain/creation_gateway_domain.proto";
import "scalapb/scalapb.proto";
import "validate/validate.proto";

option (scalapb.options) = {
    no_default_values_in_constructor: true
    preserve_unknown_fields: false
};

message ScenarioInfo {
    uint32 num_tenants = 1 [(validate.rules) = {int32: {gt: 0}}];
    uint32 max_orgs_depth = 2 [(validate.rules) = {int32: {gt: 2}}];
    uint32 max_orgs_width = 3 [(validate.rules) = {int32: {gt: 2}}];
    uint32 num_members_per_org = 4 [(validate.rules) = {int32: {gt: 1}}];
    uint32 num_events_per_org = 5 [(validate.rules) = {int32: {gt: 1}}];
    uint32 num_tickets_per_event = 7 [(validate.rules) = {int32: {gt: 1}}];
}

message StartScenario {
    ScenarioInfo scenario_info = 1;
}

message ScenarioResults {
    repeated ApiTenantId tenants = 1;
    map<string, OrganizationIds> orgs_for_tenants = 2;
    map<string, MemberIds> members_for_orgs = 3;
    map<string, EventIds> events_for_orgs = 4;
    map<string, StoreIds> stores_for_orgs = 5;
    map<string, Skus> products_for_stores = 6;
}

message EndScenario {
    repeated ApiTenantId tenants = 1;
    repeated ApiOrganizationId orgs = 2;
    repeated ApiMemberId members = 3;
    repeated ApiEventId events = 4;
    repeated ApiStoreId stores = 6;
    repeated ApiSku products = 7;
    repeated ApiOrderId orders = 8;
}