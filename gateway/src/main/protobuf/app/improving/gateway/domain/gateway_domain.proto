syntax = "proto3";

package app.improving.gateway;

import "app/improving/member/api/member_api.proto";
import "app/improving/order/api/order_api.proto";
import "app/improving/product/api/product_api.proto";
import "app/improving/store/api/store_api.proto";
import "app/improving/event/api/event_api.proto";
import "app/improving/tenant/api/tenant_api.proto";
import "common_api.proto";
import "app/improving/organization/api/organization_api.proto";

message CreateTenant {
    tenantcontext.tenant.ApiInfo tenant_info = 1;
}

message TenantCreated {
    ApiTenantId tenant_created = 1;
}

message CreateTenants {
    repeated tenantcontext.tenant.ApiInfo tenant_info = 1;
}

message TenantsCreated {
    repeated ApiTenantId tenants_created = 1;
}

message EstablishOrganization {
    organizationcontext.organization.ApiInfo info = 1;
    organizationcontext.organization.ApiParent parent = 2;
    repeated ApiMemberId members = 3;
    repeated ApiMemberId owners = 4;
    repeated organizationcontext.organization.ApiContacts contacts = 5;
    ApiMemberId establishing_member = 6;
    organizationcontext.organization.ApiMetaInfo meta = 7;
}

message CreateOrganization {
    EstablishOrganization establish_organization = 1;
}

message OrganizationCreated {
    ApiOrganizationId organization_created = 1;
}

message CreateOrganizations {
    repeated EstablishOrganization establish_organizations = 1;
}

message OrganizationsCreated {
    repeated ApiOrganizationId organizations_created = 1;
}

message CreateEvent {
    eventcontext.event.ApiEventInfo info = 1;
    ApiMemberId scheduling_member = 2;
}

message EventCreated {
    ApiEventId event_created = 1;
}

message CreateEvents {
    repeated eventcontext.event.ApiEventInfo infos = 1;
    ApiMemberId scheduling_member = 2;
}

message EventsCreated {
    repeated ApiEventId events_created = 1;
}

message CreateStore {
    storecontext.store.ApiStoreInfo info = 1;
    ApiMemberId creating_member = 2;
}

message StoreCreated {
    ApiStoreId store_created = 1;
}

message CreateStores {
    repeated storecontext.store.ApiStoreInfo infos = 1;
    ApiMemberId creating_member = 2;
}

message StoresCreated {
    repeated ApiStoreId stores_created = 1;
}

message EstablishProduct {
    productcontext.product.ApiProductInfo info = 1;
    productcontext.product.ApiProductMetaInfo meta = 2;
}

message CreateProduct {
    EstablishProduct establish_product = 1;;
}

message ProductCreated {
    ApiProductId product_created = 1;
}

message CreateProducts {
    repeated EstablishProduct establish_products = 1;
}

message ProductsCreated {
    repeated ApiProductId products_created = 1;
}

message EstablishMember {
    membercontext.member.ApiInfo info = 1;
    ApiMemberId registering_member = 2;
}

message RegisterMember {
    EstablishMember establish_member = 1;
}

message MemberRegistered {
    ApiMemberId member_registered  =1;
}

message RegisterMembers {
    repeated EstablishMember establish_members = 1;

}

message MembersRegistered {
    repeated ApiMemberId members_registered  =1;
}

message EstablishOrder {
    ordercontext.order.ApiOrderInfo info = 1;
    ApiMemberId creating_member = 2;
    ApiStoreId store_id = 3;
}

message CreateOrder {
    EstablishOrder establish_order = 1;
}

message OrderCreated {
    ApiOrderId order_created = 1;
}

message CreateOrders {
    repeated EstablishOrder establish_orders = 1;

}

message OrdersCreated {
    repeated ApiOrderId orders_created = 1;
}