syntax = "proto3";

package app.improving.gateway;

import "app/improving/event/api/event_api.proto";
import "app/improving/event/view/event_all_view.proto";
import "app/improving/gateway/domain/creation_gateway_domain.proto";
import "app/improving/member/view/member_all_view.proto";
import "app/improving/order/view/order_all_view.proto";
import "app/improving/order/view/order_by_product_view.proto";
import "app/improving/organization/view/organization_all_view.proto";
import "app/improving/product/api/product_api.proto";
import "app/improving/product/view/product_all_view.proto";
import "app/improving/store/view/store_all_view.proto";
import "app/improving/tenant/view/tenant_all_view.proto";
import "common_api.proto";
import "kalix/annotations.proto";
import "google/api/annotations.proto";

service CreationGatewayApiAction {
    option (kalix.codegen) = {
        action: { }
    };

    rpc HandleEstablishTenant(CreateTenant) returns (TenantCreated) {
        option (google.api.http) = {
            post: "/tenant/establish-tenant"
            body: "tenant_info"
        };
    }

    rpc HandleEstablishTenants(CreateTenants) returns (TenantsCreated) {
        option (google.api.http) = {
            post: "/tenant/establish-tenants"
            body: "*"
        };
    }

    rpc HandleReleaseTenants(ReleaseTenants) returns (TenantsReleased) {
        option (google.api.http) = {
            post: "/tenant/release-tenants"
            body: "*"
        };
    }

    rpc HandleEstablishOrganization(CreateOrganization) returns (OrganizationCreated) {
        option (google.api.http) = {
            post: "/organization/establish-organization"
            body: "establish_organization"
        };
    }

    rpc HandleEstablishOrganizations(CreateOrganizations) returns (OrganizationsCreated) {
        option (google.api.http) = {
            post: "/organization/establish-organizations"
            body: "*"
        };
    }

    rpc HandleReleaseOrganizations(ReleaseOrganizations) returns (OrganizationsReleased) {
        option (google.api.http) = {
            post: "/tenant/release-orgs"
            body: "*"
        };
    }

    rpc HandleScheduleEvent(CreateEvent) returns (EventCreated) {
        option (google.api.http) = {
            post: "/event/schedule-event"
            body: "*"
        };
    }

    rpc HandleScheduleEvents(CreateEvents) returns (EventsCreated) {
        option (google.api.http) = {
            post: "/event/schedule-events"
            body: "*"
        };
    }

    rpc HandleReleaseEvents(ReleaseEvents) returns (EventsReleased) {
        option (google.api.http) = {
            post: "/event/release-events"
            body: "*"
        };
    }

    rpc HandleCreateStore(CreateStore) returns (StoreCreated) {
        option (google.api.http) = {
            post: "/store/create-store"
            body: "*"
        };
    }

    rpc HandleCreateStores(CreateStores) returns (StoresCreated) {
        option (google.api.http) = {
            post: "/store/create-stores"
            body: "*"
        };
    }

    rpc HandleReleaseStores(ReleaseStores) returns (StoresReleased) {
        option (google.api.http) = {
            post: "/event/release-stores"
            body: "*"
        };
    }

    rpc HandleReleaseOrders(ReleaseOrders) returns (OrdersReleased) {
        option (google.api.http) = {
            post: "/event/release-orders"
            body: "*"
        };
    }

    rpc HandleCreateProduct(CreateProduct) returns (ProductCreated) {
        option (google.api.http) = {
            post: "/product/create-product"
            body: "establish_product"
        };
    }

    rpc HandleCreateProducts(CreateProducts) returns (ProductsCreated) {
        option (google.api.http) = {
            post: "/product/create-products"
            body: "*"
        };
    }
    rpc HandleReleaseProducts(ReleaseProducts) returns (ProductsReleased) {
        option (google.api.http) = {
            post: "/event/release-products"
            body: "*"
        };
    }

    rpc HandleRegisterMember(RegisterMember) returns (MemberRegistered) {
        option (google.api.http) = {
            post: "/member/register-member"
            body: "establish_member"
        };
    }

    rpc HandleRegisterMembers(RegisterMembers) returns (MembersRegistered) {
        option (google.api.http) = {
            post: "/member/register-members"
            body: "*"
        };
    }

    rpc HandleReleaseMembers(ReleaseMembers) returns (MembersReleased) {
        option (google.api.http) = {
            post: "/event/release-members"
            body: "*"
        };
    }

    rpc HandleCreateOrder(CreateOrder) returns (OrderCreated) {
        option (google.api.http) = {
            post: "/order/create-order"
            body: "establish_order"
        };
    }

    rpc HandleCreateOrders(CreateOrders) returns (OrdersCreated) {
        option (google.api.http) = {
            post: "/order/create-orders"
            body: "*"
        };
    }

    rpc HandleGetAllEvents(eventcontext.AllEventsRequest) returns (eventcontext.AllEventsResult) {
        option (google.api.http) = {
            get: "/event/get-all-events"
        };
    }

    rpc HandleGetAllOrganizations(organizationcontext.AllOrganizationsRequest) returns (organizationcontext.AllOrganizationsResult) {
        option (google.api.http) = {
            get: "/organization/get-all-organizations"
        };
    }

    rpc HandleGetAllTenants(tenantcontext.GetAllTenantRequest) returns (tenantcontext.AllTenantResult) {
        option (google.api.http) = {
            get: "/tenant/get-all-tenants"
        };
    }

    rpc HandleGetAllStores(storecontext.AllStoresRequest) returns (storecontext.AllStoresResult) {
        option (google.api.http) = {
            get: "/store/get-all-stores"
        };
    }

    rpc HandleGetAllProducts(productcontext.AllProductsRequest) returns (productcontext.AllProductsResult) {
        option (google.api.http) = {
            get: "/product/get-all-products"
        };
    }

    rpc HandleGetAllMembers(membercontext.AllMembersRequest) returns (membercontext.AllMembersResult) {
        option (google.api.http) = {
            get: "/member/get-all-members"
        };
    }

    rpc HandleGetAllOrders(ordercontext.AllOrdersRequest) returns (ordercontext.AllOrdersResult) {
        option (google.api.http) = {
            get: "/orders/get-all-orders"
        };
    }

    rpc HandleGetProductInfoById(GetProductInfoById) returns (productcontext.product.ApiProductInfoResult) {
        option (google.api.http) = {
            get: "/product/info/{sku}"
        };
    }

    rpc HandleGetEventById(GetEventById) returns (eventcontext.event.ApiEvent) {
        option (google.api.http) = {
            get: "/event/{event_id}"
        };
    }

    rpc HandleGetOrdersByProductId(GetOrdersByProductId) returns (ordercontext.OrderByProductResponse) {
        option (google.api.http) = {
            get: "/orders/get-orders-by-product-id/{sku}"
        };
    }

    rpc HandlePurchaseTickets(PurchaseTicketsRequest) returns (ApiOrderIds) {
        option (google.api.http) = {
            post: "/order/purchase-ticket"
            body: "*"
        };
    }
}