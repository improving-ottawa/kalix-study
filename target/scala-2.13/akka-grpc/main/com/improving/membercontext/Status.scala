// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.improving.membercontext

sealed abstract class Status(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = Status
  def isActive: _root_.scala.Boolean = false
  def isSuspended: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[Status] = com.improving.membercontext.Status
  final def asRecognized: _root_.scala.Option[com.improving.membercontext.Status.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.improving.membercontext.Status.Recognized])
}

object Status extends _root_.scalapb.GeneratedEnumCompanion[Status] {
  sealed trait Recognized extends Status
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Status] = this
  
  @SerialVersionUID(0L)
  case object ACTIVE extends Status(0) with Status.Recognized {
    val index = 0
    val name = "ACTIVE"
    override def isActive: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object SUSPENDED extends Status(1) with Status.Recognized {
    val index = 1
    val name = "SUSPENDED"
    override def isSuspended: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends Status(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values = scala.collection.immutable.Seq(ACTIVE, SUSPENDED)
  def fromValue(__value: _root_.scala.Int): Status = __value match {
    case 0 => ACTIVE
    case 1 => SUSPENDED
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = MemberContextDomainProto.javaDescriptor.getEnumTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = MemberContextDomainProto.scalaDescriptor.enums(0)
}