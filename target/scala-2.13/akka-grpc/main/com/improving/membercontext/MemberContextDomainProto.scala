// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.improving.membercontext

object MemberContextDomainProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.improving.CommonDomainProto,
    com.google.protobuf.timestamp.TimestampProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      com.improving.membercontext.GetMemberData,
      com.improving.membercontext.GetMembersByMetaInfo,
      com.improving.membercontext.Info,
      com.improving.membercontext.MemberData,
      com.improving.membercontext.MemberInfoUpdated,
      com.improving.membercontext.MemberListRegistered,
      com.improving.membercontext.MemberListResult,
      com.improving.membercontext.MemberRegistered,
      com.improving.membercontext.MemberStatusUpdated,
      com.improving.membercontext.MetaInfo,
      com.improving.membercontext.MetaInfoQuery,
      com.improving.membercontext.MemberMap,
      com.improving.membercontext.UpdateInfo
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CjBjb20vaW1wcm92aW5nL2RvbWFpbi9tZW1iZXJfY29udGV4dF9kb21haW4ucHJvdG8SG2NvbS5pbXByb3ZpbmcubWVtYmVyY
  29udGV4dBooY29tL2ltcHJvdmluZy9kb21haW4vY29tbW9uX2RvbWFpbi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtc
  C5wcm90byJTCg1HZXRNZW1iZXJEYXRhEkIKCG1lbWJlcklkGAEgASgLMhcuY29tLmltcHJvdmluZy5NZW1iZXJJZEIN4j8KEghtZ
  W1iZXJJZFIIbWVtYmVySWQicAoUR2V0TWVtYmVyc0J5TWV0YUluZm8SWAoJcXVlcnlEYXRhGAEgASgLMiouY29tLmltcHJvdmluZ
  y5tZW1iZXJjb250ZXh0Lk1ldGFJbmZvUXVlcnlCDuI/CxIJcXVlcnlEYXRhUglxdWVyeURhdGEizgUKBEluZm8SPgoHY29udGFjd
  BgBIAEoCzIWLmNvbS5pbXByb3ZpbmcuQ29udGFjdEIM4j8JEgdjb250YWN0Ugdjb250YWN0EiMKBmhhbmRsZRgCIAEoCUIL4j8IE
  gZoYW5kbGVSBmhhbmRsZRIjCgZhdmF0YXIYAyABKAlCC+I/CBIGYXZhdGFyUgZhdmF0YXISLAoJZmlyc3ROYW1lGAQgASgJQg7iP
  wsSCWZpcnN0TmFtZVIJZmlyc3ROYW1lEikKCGxhc3ROYW1lGAUgASgJQg3iPwoSCGxhc3ROYW1lUghsYXN0TmFtZRJSCgxtb2Jpb
  GVOdW1iZXIYBiABKAsyGy5jb20uaW1wcm92aW5nLk1vYmlsZU51bWJlckIR4j8OEgxtb2JpbGVOdW1iZXJSDG1vYmlsZU51bWJlc
  hJSCgxlbWFpbEFkZHJlc3MYByABKAsyGy5jb20uaW1wcm92aW5nLkVtYWlsQWRkcmVzc0IR4j8OEgxlbWFpbEFkZHJlc3NSDGVtY
  WlsQWRkcmVzcxKIAQoWbm90aWZpY2F0aW9uUHJlZmVyZW5jZRgIIAEoDjIzLmNvbS5pbXByb3ZpbmcubWVtYmVyY29udGV4dC5Ob
  3RpZmljYXRpb25QcmVmZXJlbmNlQhviPxgSFm5vdGlmaWNhdGlvblByZWZlcmVuY2VSFm5vdGlmaWNhdGlvblByZWZlcmVuY2USc
  goWb3JnYW5pemF0aW9uTWVtYmVyc2hpcBgJIAMoCzIdLmNvbS5pbXByb3ZpbmcuT3JnYW5pemF0aW9uSWRCG+I/GBIWb3JnYW5pe
  mF0aW9uTWVtYmVyc2hpcFIWb3JnYW5pemF0aW9uTWVtYmVyc2hpcBI8CgZ0ZW5hbnQYCiABKAsyFy5jb20uaW1wcm92aW5nLlRlb
  mFudElkQgviPwgSBnRlbmFudFIGdGVuYW50ItgBCgpNZW1iZXJEYXRhEkIKCG1lbWJlcklkGAEgASgLMhcuY29tLmltcHJvdmluZ
  y5NZW1iZXJJZEIN4j8KEghtZW1iZXJJZFIIbWVtYmVySWQSQAoEaW5mbxgCIAEoCzIhLmNvbS5pbXByb3ZpbmcubWVtYmVyY29ud
  GV4dC5JbmZvQgniPwYSBGluZm9SBGluZm8SRAoEbWV0YRgDIAEoCzIlLmNvbS5pbXByb3ZpbmcubWVtYmVyY29udGV4dC5NZXRhS
  W5mb0IJ4j8GEgRtZXRhUgRtZXRhIt8BChFNZW1iZXJJbmZvVXBkYXRlZBJCCghtZW1iZXJJZBgBIAEoCzIXLmNvbS5pbXByb3Zpb
  mcuTWVtYmVySWRCDeI/ChIIbWVtYmVySWRSCG1lbWJlcklkEkAKBGluZm8YAiABKAsyIS5jb20uaW1wcm92aW5nLm1lbWJlcmNvb
  nRleHQuSW5mb0IJ4j8GEgRpbmZvUgRpbmZvEkQKBG1ldGEYAyABKAsyJS5jb20uaW1wcm92aW5nLm1lbWJlcmNvbnRleHQuTWV0Y
  UluZm9CCeI/BhIEbWV0YVIEbWV0YSLOAQoUTWVtYmVyTGlzdFJlZ2lzdGVyZWQSVwoKbWVtYmVyTGlzdBgBIAEoCzImLmNvbS5pb
  XByb3ZpbmcubWVtYmVyY29udGV4dC5NZW1iZXJNYXBCD+I/DBIKbWVtYmVyTGlzdFIKbWVtYmVyTGlzdBJdChFyZWdpc3RlcmluZ
  01lbWJlchgCIAEoCzIXLmNvbS5pbXByb3ZpbmcuTWVtYmVySWRCFuI/ExIRcmVnaXN0ZXJpbmdNZW1iZXJSEXJlZ2lzdGVyaW5nT
  WVtYmVyImIKEE1lbWJlckxpc3RSZXN1bHQSTgoHbWVtYmVycxgBIAEoCzImLmNvbS5pbXByb3ZpbmcubWVtYmVyY29udGV4dC5NZ
  W1iZXJNYXBCDOI/CRIHbWVtYmVyc1IHbWVtYmVycyKcAQoQTWVtYmVyUmVnaXN0ZXJlZBJCCghtZW1iZXJJZBgBIAEoCzIXLmNvb
  S5pbXByb3ZpbmcuTWVtYmVySWRCDeI/ChIIbWVtYmVySWRSCG1lbWJlcklkEkQKBG1ldGEYAiABKAsyJS5jb20uaW1wcm92aW5nL
  m1lbWJlcmNvbnRleHQuTWV0YUluZm9CCeI/BhIEbWV0YVIEbWV0YSKfAQoTTWVtYmVyU3RhdHVzVXBkYXRlZBJCCghtZW1iZXJJZ
  BgBIAEoCzIXLmNvbS5pbXByb3ZpbmcuTWVtYmVySWRCDeI/ChIIbWVtYmVySWRSCG1lbWJlcklkEkQKBG1ldGEYAiABKAsyJS5jb
  20uaW1wcm92aW5nLm1lbWJlcmNvbnRleHQuTWV0YUluZm9CCeI/BhIEbWV0YVIEbWV0YSKjAwoITWV0YUluZm8SSAoJY3JlYXRlZ
  E9uGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIO4j8LEgljcmVhdGVkT25SCWNyZWF0ZWRPbhJCCghyZWF0ZWRCe
  RgCIAEoCzIXLmNvbS5pbXByb3ZpbmcuTWVtYmVySWRCDeI/ChIIcmVhdGVkQnlSCHJlYXRlZEJ5ElcKDmxhc3RNb2RpZmllZE9uG
  AMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIT4j8QEg5sYXN0TW9kaWZpZWRPblIObGFzdE1vZGlmaWVkT24SVAoOb
  GFzdE1vZGlmaWVkQnkYBCABKAsyFy5jb20uaW1wcm92aW5nLk1lbWJlcklkQhPiPxASDmxhc3RNb2RpZmllZEJ5Ug5sYXN0TW9ka
  WZpZWRCeRJaCgxtZW1iZXJTdGF0dXMYBSABKA4yIy5jb20uaW1wcm92aW5nLm1lbWJlcmNvbnRleHQuU3RhdHVzQhHiPw4SDG1lb
  WJlclN0YXR1c1IMbWVtYmVyU3RhdHVzIqsDCg1NZXRhSW5mb1F1ZXJ5EkgKCWNyZWF0ZWRPbhgBIAEoCzIaLmdvb2dsZS5wcm90b
  2J1Zi5UaW1lc3RhbXBCDuI/CxIJY3JlYXRlZE9uUgljcmVhdGVkT24SRQoJY3JlYXRlZEJ5GAIgASgLMhcuY29tLmltcHJvdmluZ
  y5NZW1iZXJJZEIO4j8LEgljcmVhdGVkQnlSCWNyZWF0ZWRCeRJXCg5sYXN0TW9kaWZpZWRPbhgDIAEoCzIaLmdvb2dsZS5wcm90b
  2J1Zi5UaW1lc3RhbXBCE+I/EBIObGFzdE1vZGlmaWVkT25SDmxhc3RNb2RpZmllZE9uElQKDmxhc3RNb2RpZmllZEJ5GAQgASgLM
  hcuY29tLmltcHJvdmluZy5NZW1iZXJJZEIT4j8QEg5sYXN0TW9kaWZpZWRCeVIObGFzdE1vZGlmaWVkQnkSWgoMbWVtYmVyU3Rhd
  HVzGAUgASgOMiMuY29tLmltcHJvdmluZy5tZW1iZXJjb250ZXh0LlN0YXR1c0IR4j8OEgxtZW1iZXJTdGF0dXNSDG1lbWJlclN0Y
  XR1cyJ/CglNZW1iZXJNYXASNgoEZnJvbRgBIAEoCzIXLmNvbS5pbXByb3ZpbmcuTWVtYmVySWRCCeI/BhIEZnJvbVIEZnJvbRI6C
  gJ0bxgCIAEoCzIhLmNvbS5pbXByb3ZpbmcubWVtYmVyY29udGV4dC5JbmZvQgfiPwQSAnRvUgJ0byLWBAoKVXBkYXRlSW5mbxIjC
  gZoYW5kbGUYASABKAlCC+I/CBIGaGFuZGxlUgZoYW5kbGUSIwoGYXZhdGFyGAIgASgJQgviPwgSBmF2YXRhclIGYXZhdGFyEiwKC
  WZpcnN0TmFtZRgDIAEoCUIO4j8LEglmaXJzdE5hbWVSCWZpcnN0TmFtZRIpCghsYXN0TmFtZRgEIAEoCUIN4j8KEghsYXN0TmFtZ
  VIIbGFzdE5hbWUSUgoMbW9iaWxlTnVtYmVyGAUgASgLMhsuY29tLmltcHJvdmluZy5Nb2JpbGVOdW1iZXJCEeI/DhIMbW9iaWxlT
  nVtYmVyUgxtb2JpbGVOdW1iZXISUgoMZW1haWxBZGRyZXNzGAYgASgLMhsuY29tLmltcHJvdmluZy5FbWFpbEFkZHJlc3NCEeI/D
  hIMZW1haWxBZGRyZXNzUgxlbWFpbEFkZHJlc3MSiAEKFm5vdGlmaWNhdGlvblByZWZlcmVuY2UYByABKA4yMy5jb20uaW1wcm92a
  W5nLm1lbWJlcmNvbnRleHQuTm90aWZpY2F0aW9uUHJlZmVyZW5jZUIb4j8YEhZub3RpZmljYXRpb25QcmVmZXJlbmNlUhZub3RpZ
  mljYXRpb25QcmVmZXJlbmNlEnIKFm9yZ2FuaXphdGlvbk1lbWJlcnNoaXAYCCADKAsyHS5jb20uaW1wcm92aW5nLk9yZ2FuaXphd
  GlvbklkQhviPxgSFm9yZ2FuaXphdGlvbk1lbWJlcnNoaXBSFm9yZ2FuaXphdGlvbk1lbWJlcnNoaXAqQAoGU3RhdHVzEhcKBkFDV
  ElWRRAAGgviPwgSBkFDVElWRRIdCglTVVNQRU5ERUQQARoO4j8LEglTVVNQRU5ERUQqZQoWTm90aWZpY2F0aW9uUHJlZmVyZW5jZ
  RIVCgVFTUFJTBAAGgriPwcSBUVNQUlMEhEKA1NNUxABGgjiPwUSA1NNUxIhCgtBUFBMSUNBVElPThACGhDiPw0SC0FQUExJQ0FUS
  U9OYgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.improving.CommonDomainProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}