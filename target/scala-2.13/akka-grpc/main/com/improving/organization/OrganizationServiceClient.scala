
// Generated by Akka gRPC. DO NOT EDIT.
package com.improving.organization

import scala.concurrent.ExecutionContext

import akka.actor.ClassicActorSystemProvider

import akka.grpc.GrpcChannel
import akka.grpc.GrpcClientCloseException
import akka.grpc.GrpcClientSettings

import akka.grpc.scaladsl.AkkaGrpcClient

import akka.grpc.internal.NettyClientUtils

import akka.grpc.AkkaGrpcGenerated

import akka.grpc.scaladsl.SingleResponseRequestBuilder
import akka.grpc.internal.ScalaUnaryRequestBuilder

// Not sealed so users can extend to write their stubs
@AkkaGrpcGenerated
trait OrganizationServiceClient extends OrganizationService with OrganizationServiceClientPowerApi with AkkaGrpcClient

@AkkaGrpcGenerated
object OrganizationServiceClient {
  def apply(settings: GrpcClientSettings)(implicit sys: ClassicActorSystemProvider): OrganizationServiceClient =
    new DefaultOrganizationServiceClient(GrpcChannel(settings), isChannelOwned = true)
  def apply(channel: GrpcChannel)(implicit sys: ClassicActorSystemProvider): OrganizationServiceClient =
    new DefaultOrganizationServiceClient(channel, isChannelOwned = false)

  private class DefaultOrganizationServiceClient(channel: GrpcChannel, isChannelOwned: Boolean)(implicit sys: ClassicActorSystemProvider) extends OrganizationServiceClient {
    import OrganizationService.MethodDescriptors._

    private implicit val ex: ExecutionContext = sys.classicSystem.dispatcher
    private val settings = channel.settings
    private val options = NettyClientUtils.callOptions(settings)

    
    private def addMembersToOrganizationRequestBuilder(channel: akka.grpc.internal.InternalChannel) =
    
      new ScalaUnaryRequestBuilder(addMembersToOrganizationDescriptor, channel, options, settings)
    
    
    private def addOwnersToOrganizationRequestBuilder(channel: akka.grpc.internal.InternalChannel) =
    
      new ScalaUnaryRequestBuilder(addOwnersToOrganizationDescriptor, channel, options, settings)
    
    
    private def editOrganizationInfoRequestBuilder(channel: akka.grpc.internal.InternalChannel) =
    
      new ScalaUnaryRequestBuilder(editOrganizationInfoDescriptor, channel, options, settings)
    
    
    private def establishOrganizationRequestBuilder(channel: akka.grpc.internal.InternalChannel) =
    
      new ScalaUnaryRequestBuilder(establishOrganizationDescriptor, channel, options, settings)
    
    

    
    /**
     * Lower level "lifted" version of the method, giving access to request metadata etc.
     * prefer addMembersToOrganization(com.improving.organization.ApiAddMembersToOrganization) if possible.
     */
    
    override def addMembersToOrganization(): SingleResponseRequestBuilder[com.improving.organization.ApiAddMembersToOrganization, com.google.protobuf.empty.Empty] =
      addMembersToOrganizationRequestBuilder(channel.internalChannel)
    

    /**
     * For access to method metadata use the parameterless version of addMembersToOrganization
     */
    def addMembersToOrganization(in: com.improving.organization.ApiAddMembersToOrganization): scala.concurrent.Future[com.google.protobuf.empty.Empty] =
      addMembersToOrganization().invoke(in)
    
    /**
     * Lower level "lifted" version of the method, giving access to request metadata etc.
     * prefer addOwnersToOrganization(com.improving.organization.ApiAddOwnersToOrganization) if possible.
     */
    
    override def addOwnersToOrganization(): SingleResponseRequestBuilder[com.improving.organization.ApiAddOwnersToOrganization, com.google.protobuf.empty.Empty] =
      addOwnersToOrganizationRequestBuilder(channel.internalChannel)
    

    /**
     * For access to method metadata use the parameterless version of addOwnersToOrganization
     */
    def addOwnersToOrganization(in: com.improving.organization.ApiAddOwnersToOrganization): scala.concurrent.Future[com.google.protobuf.empty.Empty] =
      addOwnersToOrganization().invoke(in)
    
    /**
     * Lower level "lifted" version of the method, giving access to request metadata etc.
     * prefer editOrganizationInfo(com.improving.organization.ApiEditOrganizationInfo) if possible.
     */
    
    override def editOrganizationInfo(): SingleResponseRequestBuilder[com.improving.organization.ApiEditOrganizationInfo, com.google.protobuf.empty.Empty] =
      editOrganizationInfoRequestBuilder(channel.internalChannel)
    

    /**
     * For access to method metadata use the parameterless version of editOrganizationInfo
     */
    def editOrganizationInfo(in: com.improving.organization.ApiEditOrganizationInfo): scala.concurrent.Future[com.google.protobuf.empty.Empty] =
      editOrganizationInfo().invoke(in)
    
    /**
     * Lower level "lifted" version of the method, giving access to request metadata etc.
     * prefer establishOrganization(com.improving.organization.ApiEstablishOrganization) if possible.
     */
    
    override def establishOrganization(): SingleResponseRequestBuilder[com.improving.organization.ApiEstablishOrganization, com.google.protobuf.empty.Empty] =
      establishOrganizationRequestBuilder(channel.internalChannel)
    

    /**
     * For access to method metadata use the parameterless version of establishOrganization
     */
    def establishOrganization(in: com.improving.organization.ApiEstablishOrganization): scala.concurrent.Future[com.google.protobuf.empty.Empty] =
      establishOrganization().invoke(in)
    

    override def close(): scala.concurrent.Future[akka.Done] =
      if (isChannelOwned) channel.close()
      else throw new GrpcClientCloseException()

    override def closed: scala.concurrent.Future[akka.Done] = channel.closed()
  }
}

@AkkaGrpcGenerated
trait OrganizationServiceClientPowerApi {
  
  /**
   * Lower level "lifted" version of the method, giving access to request metadata etc.
   * prefer addMembersToOrganization(com.improving.organization.ApiAddMembersToOrganization) if possible.
   */
  
  def addMembersToOrganization(): SingleResponseRequestBuilder[com.improving.organization.ApiAddMembersToOrganization, com.google.protobuf.empty.Empty] = ???
  
  
  /**
   * Lower level "lifted" version of the method, giving access to request metadata etc.
   * prefer addOwnersToOrganization(com.improving.organization.ApiAddOwnersToOrganization) if possible.
   */
  
  def addOwnersToOrganization(): SingleResponseRequestBuilder[com.improving.organization.ApiAddOwnersToOrganization, com.google.protobuf.empty.Empty] = ???
  
  
  /**
   * Lower level "lifted" version of the method, giving access to request metadata etc.
   * prefer editOrganizationInfo(com.improving.organization.ApiEditOrganizationInfo) if possible.
   */
  
  def editOrganizationInfo(): SingleResponseRequestBuilder[com.improving.organization.ApiEditOrganizationInfo, com.google.protobuf.empty.Empty] = ???
  
  
  /**
   * Lower level "lifted" version of the method, giving access to request metadata etc.
   * prefer establishOrganization(com.improving.organization.ApiEstablishOrganization) if possible.
   */
  
  def establishOrganization(): SingleResponseRequestBuilder[com.improving.organization.ApiEstablishOrganization, com.google.protobuf.empty.Empty] = ???
  
  

}
