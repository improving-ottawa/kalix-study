// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package kalix

/** @param bearerTokenIssuer
  *   If set, then the token extracted from the bearer token must have this issuer.
  *  
  *   This can be used in combination with the issuer field of configuration for JWT secrets, if there is at least one
  *   secret that has this issuer set, then only those secrets with that issuer set will be used for validating or
  *   signing this token, so you can be sure that the token did come from a particular issuer.
  */
@SerialVersionUID(0L)
final case class JwtMethodOptions(
    validate: _root_.scala.Seq[kalix.JwtMethodOptions.JwtMethodMode] = _root_.scala.Seq.empty,
    sign: _root_.scala.Seq[kalix.JwtMethodOptions.JwtMethodMode] = _root_.scala.Seq.empty,
    bearerTokenIssuer: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[JwtMethodOptions] {
    private[this] def validateSerializedSize = {
      if (__validateSerializedSizeField == 0) __validateSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        validate.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
        __s
      }
      __validateSerializedSizeField
    }
    @transient private[this] var __validateSerializedSizeField: _root_.scala.Int = 0
    private[this] def signSerializedSize = {
      if (__signSerializedSizeField == 0) __signSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        sign.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
        __s
      }
      __signSerializedSizeField
    }
    @transient private[this] var __signSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (validate.nonEmpty) {
        val __localsize = validateSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (sign.nonEmpty) {
        val __localsize = signSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      bearerTokenIssuer.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      if (validate.nonEmpty) {
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(validateSerializedSize)
        validate.foreach((_output__.writeEnumNoTag _).compose((_: kalix.JwtMethodOptions.JwtMethodMode).value))
      };
      if (sign.nonEmpty) {
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(signSerializedSize)
        sign.foreach((_output__.writeEnumNoTag _).compose((_: kalix.JwtMethodOptions.JwtMethodMode).value))
      };
      bearerTokenIssuer.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def clearValidate = copy(validate = _root_.scala.Seq.empty)
    def addValidate(__vs: kalix.JwtMethodOptions.JwtMethodMode *): JwtMethodOptions = addAllValidate(__vs)
    def addAllValidate(__vs: Iterable[kalix.JwtMethodOptions.JwtMethodMode]): JwtMethodOptions = copy(validate = validate ++ __vs)
    def withValidate(__v: _root_.scala.Seq[kalix.JwtMethodOptions.JwtMethodMode]): JwtMethodOptions = copy(validate = __v)
    def clearSign = copy(sign = _root_.scala.Seq.empty)
    def addSign(__vs: kalix.JwtMethodOptions.JwtMethodMode *): JwtMethodOptions = addAllSign(__vs)
    def addAllSign(__vs: Iterable[kalix.JwtMethodOptions.JwtMethodMode]): JwtMethodOptions = copy(sign = sign ++ __vs)
    def withSign(__v: _root_.scala.Seq[kalix.JwtMethodOptions.JwtMethodMode]): JwtMethodOptions = copy(sign = __v)
    def clearBearerTokenIssuer = copy(bearerTokenIssuer = _root_.scala.Seq.empty)
    def addBearerTokenIssuer(__vs: _root_.scala.Predef.String *): JwtMethodOptions = addAllBearerTokenIssuer(__vs)
    def addAllBearerTokenIssuer(__vs: Iterable[_root_.scala.Predef.String]): JwtMethodOptions = copy(bearerTokenIssuer = bearerTokenIssuer ++ __vs)
    def withBearerTokenIssuer(__v: _root_.scala.Seq[_root_.scala.Predef.String]): JwtMethodOptions = copy(bearerTokenIssuer = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => validate.iterator.map(_.javaValueDescriptor).toSeq
        case 2 => sign.iterator.map(_.javaValueDescriptor).toSeq
        case 3 => bearerTokenIssuer
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(validate.iterator.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).toVector)
        case 2 => _root_.scalapb.descriptors.PRepeated(sign.iterator.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(bearerTokenIssuer.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: kalix.JwtMethodOptions.type = kalix.JwtMethodOptions
    // @@protoc_insertion_point(GeneratedMessage[kalix.JwtMethodOptions])
}

object JwtMethodOptions extends scalapb.GeneratedMessageCompanion[kalix.JwtMethodOptions] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[kalix.JwtMethodOptions] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): kalix.JwtMethodOptions = {
    val __validate: _root_.scala.collection.immutable.VectorBuilder[kalix.JwtMethodOptions.JwtMethodMode] = new _root_.scala.collection.immutable.VectorBuilder[kalix.JwtMethodOptions.JwtMethodMode]
    val __sign: _root_.scala.collection.immutable.VectorBuilder[kalix.JwtMethodOptions.JwtMethodMode] = new _root_.scala.collection.immutable.VectorBuilder[kalix.JwtMethodOptions.JwtMethodMode]
    val __bearerTokenIssuer: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __validate += kalix.JwtMethodOptions.JwtMethodMode.fromValue(_input__.readEnum())
        case 10 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __validate += kalix.JwtMethodOptions.JwtMethodMode.fromValue(_input__.readEnum())
          }
          _input__.popLimit(oldLimit)
        }
        case 16 =>
          __sign += kalix.JwtMethodOptions.JwtMethodMode.fromValue(_input__.readEnum())
        case 18 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __sign += kalix.JwtMethodOptions.JwtMethodMode.fromValue(_input__.readEnum())
          }
          _input__.popLimit(oldLimit)
        }
        case 26 =>
          __bearerTokenIssuer += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    kalix.JwtMethodOptions(
        validate = __validate.result(),
        sign = __sign.result(),
        bearerTokenIssuer = __bearerTokenIssuer.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[kalix.JwtMethodOptions] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      kalix.JwtMethodOptions(
        validate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.Seq.empty).iterator.map(__e => kalix.JwtMethodOptions.JwtMethodMode.fromValue(__e.number)).toSeq,
        sign = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.Seq.empty).iterator.map(__e => kalix.JwtMethodOptions.JwtMethodMode.fromValue(__e.number)).toSeq,
        bearerTokenIssuer = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = JwtProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = JwtProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => kalix.JwtMethodOptions.JwtMethodMode
      case 2 => kalix.JwtMethodOptions.JwtMethodMode
    }
  }
  lazy val defaultInstance = kalix.JwtMethodOptions(
    validate = _root_.scala.Seq.empty,
    sign = _root_.scala.Seq.empty,
    bearerTokenIssuer = _root_.scala.Seq.empty
  )
  sealed abstract class JwtMethodMode(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = JwtMethodMode
    def isUnspecified: _root_.scala.Boolean = false
    def isBearerToken: _root_.scala.Boolean = false
    def isMessage: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[JwtMethodMode] = kalix.JwtMethodOptions.JwtMethodMode
    final def asRecognized: _root_.scala.Option[kalix.JwtMethodOptions.JwtMethodMode.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[kalix.JwtMethodOptions.JwtMethodMode.Recognized])
  }
  
  object JwtMethodMode extends _root_.scalapb.GeneratedEnumCompanion[JwtMethodMode] {
    sealed trait Recognized extends JwtMethodMode
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[JwtMethodMode] = this
    
    /** No validation.
      */
    @SerialVersionUID(0L)
    case object UNSPECIFIED extends JwtMethodMode(0) with JwtMethodMode.Recognized {
      val index = 0
      val name = "UNSPECIFIED"
      override def isUnspecified: _root_.scala.Boolean = true
    }
    
    /** Validate the bearer token.
      */
    @SerialVersionUID(0L)
    case object BEARER_TOKEN extends JwtMethodMode(1) with JwtMethodMode.Recognized {
      val index = 1
      val name = "BEARER_TOKEN"
      override def isBearerToken: _root_.scala.Boolean = true
    }
    
    /** Validate/sign a token field in the message against the message fields.
      *
      * If present, the message must have a token annotated field or the message itself must have validate_bearer_token
      * set to true.
      */
    @SerialVersionUID(0L)
    case object MESSAGE extends JwtMethodMode(2) with JwtMethodMode.Recognized {
      val index = 2
      val name = "MESSAGE"
      override def isMessage: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends JwtMethodMode(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    lazy val values = scala.collection.immutable.Seq(UNSPECIFIED, BEARER_TOKEN, MESSAGE)
    def fromValue(__value: _root_.scala.Int): JwtMethodMode = __value match {
      case 0 => UNSPECIFIED
      case 1 => BEARER_TOKEN
      case 2 => MESSAGE
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = kalix.JwtMethodOptions.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = kalix.JwtMethodOptions.scalaDescriptor.enums(0)
  }
  implicit class JwtMethodOptionsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, kalix.JwtMethodOptions]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, kalix.JwtMethodOptions](_l) {
    def validate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[kalix.JwtMethodOptions.JwtMethodMode]] = field(_.validate)((c_, f_) => c_.copy(validate = f_))
    def sign: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[kalix.JwtMethodOptions.JwtMethodMode]] = field(_.sign)((c_, f_) => c_.copy(sign = f_))
    def bearerTokenIssuer: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.bearerTokenIssuer)((c_, f_) => c_.copy(bearerTokenIssuer = f_))
  }
  final val VALIDATE_FIELD_NUMBER = 1
  final val SIGN_FIELD_NUMBER = 2
  final val BEARER_TOKEN_ISSUER_FIELD_NUMBER = 3
  def of(
    validate: _root_.scala.Seq[kalix.JwtMethodOptions.JwtMethodMode],
    sign: _root_.scala.Seq[kalix.JwtMethodOptions.JwtMethodMode],
    bearerTokenIssuer: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.kalix.JwtMethodOptions = _root_.kalix.JwtMethodOptions(
    validate,
    sign,
    bearerTokenIssuer
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[kalix.JwtMethodOptions])
}
