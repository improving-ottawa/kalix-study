// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package kalix

/** @param eventSourcedEntity
  *   Event sourced entity configuration.
  * @param valueEntity
  *   Value entity configuration.
  * @param replicatedEntity
  *   Replicated entity configuration.
  * @param acl
  *   ACL options
  */
@SerialVersionUID(0L)
final case class FileOptions(
    eventSourcedEntity: _root_.scala.Option[kalix.EventSourcedEntity] = _root_.scala.None,
    valueEntity: _root_.scala.Option[kalix.ValueEntity] = _root_.scala.None,
    replicatedEntity: _root_.scala.Option[kalix.ReplicatedEntity] = _root_.scala.None,
    acl: _root_.scala.Option[kalix.Acl] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[FileOptions] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (eventSourcedEntity.isDefined) {
        val __value = eventSourcedEntity.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (valueEntity.isDefined) {
        val __value = valueEntity.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (replicatedEntity.isDefined) {
        val __value = replicatedEntity.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (acl.isDefined) {
        val __value = acl.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      eventSourcedEntity.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      valueEntity.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      replicatedEntity.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      acl.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getEventSourcedEntity: kalix.EventSourcedEntity = eventSourcedEntity.getOrElse(kalix.EventSourcedEntity.defaultInstance)
    def clearEventSourcedEntity: FileOptions = copy(eventSourcedEntity = _root_.scala.None)
    def withEventSourcedEntity(__v: kalix.EventSourcedEntity): FileOptions = copy(eventSourcedEntity = Option(__v))
    def getValueEntity: kalix.ValueEntity = valueEntity.getOrElse(kalix.ValueEntity.defaultInstance)
    def clearValueEntity: FileOptions = copy(valueEntity = _root_.scala.None)
    def withValueEntity(__v: kalix.ValueEntity): FileOptions = copy(valueEntity = Option(__v))
    def getReplicatedEntity: kalix.ReplicatedEntity = replicatedEntity.getOrElse(kalix.ReplicatedEntity.defaultInstance)
    def clearReplicatedEntity: FileOptions = copy(replicatedEntity = _root_.scala.None)
    def withReplicatedEntity(__v: kalix.ReplicatedEntity): FileOptions = copy(replicatedEntity = Option(__v))
    def getAcl: kalix.Acl = acl.getOrElse(kalix.Acl.defaultInstance)
    def clearAcl: FileOptions = copy(acl = _root_.scala.None)
    def withAcl(__v: kalix.Acl): FileOptions = copy(acl = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => eventSourcedEntity.orNull
        case 2 => valueEntity.orNull
        case 3 => replicatedEntity.orNull
        case 4 => acl.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => eventSourcedEntity.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => valueEntity.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => replicatedEntity.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => acl.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: kalix.FileOptions.type = kalix.FileOptions
    // @@protoc_insertion_point(GeneratedMessage[kalix.FileOptions])
}

object FileOptions extends scalapb.GeneratedMessageCompanion[kalix.FileOptions] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[kalix.FileOptions] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): kalix.FileOptions = {
    var __eventSourcedEntity: _root_.scala.Option[kalix.EventSourcedEntity] = _root_.scala.None
    var __valueEntity: _root_.scala.Option[kalix.ValueEntity] = _root_.scala.None
    var __replicatedEntity: _root_.scala.Option[kalix.ReplicatedEntity] = _root_.scala.None
    var __acl: _root_.scala.Option[kalix.Acl] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __eventSourcedEntity = Option(__eventSourcedEntity.fold(_root_.scalapb.LiteParser.readMessage[kalix.EventSourcedEntity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __valueEntity = Option(__valueEntity.fold(_root_.scalapb.LiteParser.readMessage[kalix.ValueEntity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __replicatedEntity = Option(__replicatedEntity.fold(_root_.scalapb.LiteParser.readMessage[kalix.ReplicatedEntity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __acl = Option(__acl.fold(_root_.scalapb.LiteParser.readMessage[kalix.Acl](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    kalix.FileOptions(
        eventSourcedEntity = __eventSourcedEntity,
        valueEntity = __valueEntity,
        replicatedEntity = __replicatedEntity,
        acl = __acl,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[kalix.FileOptions] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      kalix.FileOptions(
        eventSourcedEntity = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[kalix.EventSourcedEntity]]),
        valueEntity = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[kalix.ValueEntity]]),
        replicatedEntity = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[kalix.ReplicatedEntity]]),
        acl = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[kalix.Acl]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AnnotationsProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AnnotationsProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = kalix.EventSourcedEntity
      case 2 => __out = kalix.ValueEntity
      case 3 => __out = kalix.ReplicatedEntity
      case 4 => __out = kalix.Acl
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = kalix.FileOptions(
    eventSourcedEntity = _root_.scala.None,
    valueEntity = _root_.scala.None,
    replicatedEntity = _root_.scala.None,
    acl = _root_.scala.None
  )
  implicit class FileOptionsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, kalix.FileOptions]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, kalix.FileOptions](_l) {
    def eventSourcedEntity: _root_.scalapb.lenses.Lens[UpperPB, kalix.EventSourcedEntity] = field(_.getEventSourcedEntity)((c_, f_) => c_.copy(eventSourcedEntity = Option(f_)))
    def optionalEventSourcedEntity: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[kalix.EventSourcedEntity]] = field(_.eventSourcedEntity)((c_, f_) => c_.copy(eventSourcedEntity = f_))
    def valueEntity: _root_.scalapb.lenses.Lens[UpperPB, kalix.ValueEntity] = field(_.getValueEntity)((c_, f_) => c_.copy(valueEntity = Option(f_)))
    def optionalValueEntity: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[kalix.ValueEntity]] = field(_.valueEntity)((c_, f_) => c_.copy(valueEntity = f_))
    def replicatedEntity: _root_.scalapb.lenses.Lens[UpperPB, kalix.ReplicatedEntity] = field(_.getReplicatedEntity)((c_, f_) => c_.copy(replicatedEntity = Option(f_)))
    def optionalReplicatedEntity: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[kalix.ReplicatedEntity]] = field(_.replicatedEntity)((c_, f_) => c_.copy(replicatedEntity = f_))
    def acl: _root_.scalapb.lenses.Lens[UpperPB, kalix.Acl] = field(_.getAcl)((c_, f_) => c_.copy(acl = Option(f_)))
    def optionalAcl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[kalix.Acl]] = field(_.acl)((c_, f_) => c_.copy(acl = f_))
  }
  final val EVENT_SOURCED_ENTITY_FIELD_NUMBER = 1
  final val VALUE_ENTITY_FIELD_NUMBER = 2
  final val REPLICATED_ENTITY_FIELD_NUMBER = 3
  final val ACL_FIELD_NUMBER = 4
  def of(
    eventSourcedEntity: _root_.scala.Option[kalix.EventSourcedEntity],
    valueEntity: _root_.scala.Option[kalix.ValueEntity],
    replicatedEntity: _root_.scala.Option[kalix.ReplicatedEntity],
    acl: _root_.scala.Option[kalix.Acl]
  ): _root_.kalix.FileOptions = _root_.kalix.FileOptions(
    eventSourcedEntity,
    valueEntity,
    replicatedEntity,
    acl
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[kalix.FileOptions])
}
