// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package kalix

object ComponentProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq.empty
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      kalix.ActionDef,
      kalix.ViewDef,
      kalix.EventSourcedEntityDef,
      kalix.ValueEntityDef,
      kalix.ReplicatedEntityDef,
      kalix.ReplicatedCounterDef,
      kalix.ReplicatedRegisterDef,
      kalix.ReplicatedSetDef,
      kalix.ReplicatedMapDef,
      kalix.ReplicatedCounterMapDef,
      kalix.ReplicatedRegisterMapDef,
      kalix.ReplicatedMultiMapDef,
      kalix.ReplicatedVoteDef,
      kalix.EventSourcedEntity,
      kalix.ValueEntity,
      kalix.ReplicatedEntity,
      kalix.ReplicatedCounter,
      kalix.ReplicatedRegister,
      kalix.ReplicatedSet,
      kalix.ReplicatedMap,
      kalix.ReplicatedCounterMap,
      kalix.ReplicatedRegisterMap,
      kalix.ReplicatedMultiMap,
      kalix.ReplicatedVote
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """ChVrYWxpeC9jb21wb25lbnQucHJvdG8SBWthbGl4IioKCUFjdGlvbkRlZhIdCgRuYW1lGAEgASgJQgniPwYSBG5hbWVSBG5hb
  WUiKAoHVmlld0RlZhIdCgRuYW1lGAEgASgJQgniPwYSBG5hbWVSBG5hbWUirwEKFUV2ZW50U291cmNlZEVudGl0eURlZhIdCgRuY
  W1lGAEgASgJQgniPwYSBG5hbWVSBG5hbWUSMAoLZW50aXR5X3R5cGUYAiABKAlCD+I/DBIKZW50aXR5VHlwZVIKZW50aXR5VHlwZ
  RIgCgVzdGF0ZRgDIAEoCUIK4j8HEgVzdGF0ZVIFc3RhdGUSIwoGZXZlbnRzGAQgAygJQgviPwgSBmV2ZW50c1IGZXZlbnRzIoMBC
  g5WYWx1ZUVudGl0eURlZhIdCgRuYW1lGAEgASgJQgniPwYSBG5hbWVSBG5hbWUSMAoLZW50aXR5X3R5cGUYAiABKAlCD+I/DBIKZ
  W50aXR5VHlwZVIKZW50aXR5VHlwZRIgCgVzdGF0ZRgDIAEoCUIK4j8HEgVzdGF0ZVIFc3RhdGUipAcKE1JlcGxpY2F0ZWRFbnRpd
  HlEZWYSHQoEbmFtZRgBIAEoCUIJ4j8GEgRuYW1lUgRuYW1lEjAKC2VudGl0eV90eXBlGAIgASgJQg/iPwwSCmVudGl0eVR5cGVSC
  mVudGl0eVR5cGUSZAoScmVwbGljYXRlZF9jb3VudGVyGAMgASgLMhsua2FsaXguUmVwbGljYXRlZENvdW50ZXJEZWZCFuI/ExIRc
  mVwbGljYXRlZENvdW50ZXJIAFIRcmVwbGljYXRlZENvdW50ZXISaAoTcmVwbGljYXRlZF9yZWdpc3RlchgEIAEoCzIcLmthbGl4L
  lJlcGxpY2F0ZWRSZWdpc3RlckRlZkIX4j8UEhJyZXBsaWNhdGVkUmVnaXN0ZXJIAFIScmVwbGljYXRlZFJlZ2lzdGVyElQKDnJlc
  GxpY2F0ZWRfc2V0GAUgASgLMhcua2FsaXguUmVwbGljYXRlZFNldERlZkIS4j8PEg1yZXBsaWNhdGVkU2V0SABSDXJlcGxpY2F0Z
  WRTZXQSVAoOcmVwbGljYXRlZF9tYXAYBiABKAsyFy5rYWxpeC5SZXBsaWNhdGVkTWFwRGVmQhLiPw8SDXJlcGxpY2F0ZWRNYXBIA
  FINcmVwbGljYXRlZE1hcBJxChZyZXBsaWNhdGVkX2NvdW50ZXJfbWFwGAcgASgLMh4ua2FsaXguUmVwbGljYXRlZENvdW50ZXJNY
  XBEZWZCGeI/FhIUcmVwbGljYXRlZENvdW50ZXJNYXBIAFIUcmVwbGljYXRlZENvdW50ZXJNYXASdQoXcmVwbGljYXRlZF9yZWdpc
  3Rlcl9tYXAYCCABKAsyHy5rYWxpeC5SZXBsaWNhdGVkUmVnaXN0ZXJNYXBEZWZCGuI/FxIVcmVwbGljYXRlZFJlZ2lzdGVyTWFwS
  ABSFXJlcGxpY2F0ZWRSZWdpc3Rlck1hcBJpChRyZXBsaWNhdGVkX211bHRpX21hcBgJIAEoCzIcLmthbGl4LlJlcGxpY2F0ZWRNd
  Wx0aU1hcERlZkIX4j8UEhJyZXBsaWNhdGVkTXVsdGlNYXBIAFIScmVwbGljYXRlZE11bHRpTWFwElgKD3JlcGxpY2F0ZWRfdm90Z
  RgKIAEoCzIYLmthbGl4LlJlcGxpY2F0ZWRWb3RlRGVmQhPiPxASDnJlcGxpY2F0ZWRWb3RlSABSDnJlcGxpY2F0ZWRWb3RlQhEKD
  3JlcGxpY2F0ZWRfZGF0YSIWChRSZXBsaWNhdGVkQ291bnRlckRlZiI5ChVSZXBsaWNhdGVkUmVnaXN0ZXJEZWYSIAoFdmFsdWUYA
  SABKAlCCuI/BxIFdmFsdWVSBXZhbHVlIjoKEFJlcGxpY2F0ZWRTZXREZWYSJgoHZWxlbWVudBgBIAEoCUIM4j8JEgdlbGVtZW50U
  gdlbGVtZW50Ii4KEFJlcGxpY2F0ZWRNYXBEZWYSGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa2V5IjUKF1JlcGxpY2F0ZWRDb3Vud
  GVyTWFwRGVmEhoKA2tleRgBIAEoCUII4j8FEgNrZXlSA2tleSJYChhSZXBsaWNhdGVkUmVnaXN0ZXJNYXBEZWYSGgoDa2V5GAEgA
  SgJQgjiPwUSA2tleVIDa2V5EiAKBXZhbHVlGAIgASgJQgriPwcSBXZhbHVlUgV2YWx1ZSJVChVSZXBsaWNhdGVkTXVsdGlNYXBEZ
  WYSGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa2V5EiAKBXZhbHVlGAIgASgJQgriPwcSBXZhbHVlUgV2YWx1ZSITChFSZXBsaWNhd
  GVkVm90ZURlZiKsAQoSRXZlbnRTb3VyY2VkRW50aXR5Eh0KBG5hbWUYASABKAlCCeI/BhIEbmFtZVIEbmFtZRIwCgtlbnRpdHlfd
  HlwZRgCIAEoCUIP4j8MEgplbnRpdHlUeXBlUgplbnRpdHlUeXBlEiAKBXN0YXRlGAMgASgJQgriPwcSBXN0YXRlUgVzdGF0ZRIjC
  gZldmVudHMYBCADKAlCC+I/CBIGZXZlbnRzUgZldmVudHMigAEKC1ZhbHVlRW50aXR5Eh0KBG5hbWUYASABKAlCCeI/BhIEbmFtZ
  VIEbmFtZRIwCgtlbnRpdHlfdHlwZRgCIAEoCUIP4j8MEgplbnRpdHlUeXBlUgplbnRpdHlUeXBlEiAKBXN0YXRlGAMgASgJQgriP
  wcSBXN0YXRlUgVzdGF0ZSKJBwoQUmVwbGljYXRlZEVudGl0eRIdCgRuYW1lGAEgASgJQgniPwYSBG5hbWVSBG5hbWUSMAoLZW50a
  XR5X3R5cGUYAiABKAlCD+I/DBIKZW50aXR5VHlwZVIKZW50aXR5VHlwZRJhChJyZXBsaWNhdGVkX2NvdW50ZXIYAyABKAsyGC5rY
  WxpeC5SZXBsaWNhdGVkQ291bnRlckIW4j8TEhFyZXBsaWNhdGVkQ291bnRlckgAUhFyZXBsaWNhdGVkQ291bnRlchJlChNyZXBsa
  WNhdGVkX3JlZ2lzdGVyGAQgASgLMhkua2FsaXguUmVwbGljYXRlZFJlZ2lzdGVyQhfiPxQSEnJlcGxpY2F0ZWRSZWdpc3RlckgAU
  hJyZXBsaWNhdGVkUmVnaXN0ZXISUQoOcmVwbGljYXRlZF9zZXQYBSABKAsyFC5rYWxpeC5SZXBsaWNhdGVkU2V0QhLiPw8SDXJlc
  GxpY2F0ZWRTZXRIAFINcmVwbGljYXRlZFNldBJRCg5yZXBsaWNhdGVkX21hcBgGIAEoCzIULmthbGl4LlJlcGxpY2F0ZWRNYXBCE
  uI/DxINcmVwbGljYXRlZE1hcEgAUg1yZXBsaWNhdGVkTWFwEm4KFnJlcGxpY2F0ZWRfY291bnRlcl9tYXAYByABKAsyGy5rYWxpe
  C5SZXBsaWNhdGVkQ291bnRlck1hcEIZ4j8WEhRyZXBsaWNhdGVkQ291bnRlck1hcEgAUhRyZXBsaWNhdGVkQ291bnRlck1hcBJyC
  hdyZXBsaWNhdGVkX3JlZ2lzdGVyX21hcBgIIAEoCzIcLmthbGl4LlJlcGxpY2F0ZWRSZWdpc3Rlck1hcEIa4j8XEhVyZXBsaWNhd
  GVkUmVnaXN0ZXJNYXBIAFIVcmVwbGljYXRlZFJlZ2lzdGVyTWFwEmYKFHJlcGxpY2F0ZWRfbXVsdGlfbWFwGAkgASgLMhkua2Fsa
  XguUmVwbGljYXRlZE11bHRpTWFwQhfiPxQSEnJlcGxpY2F0ZWRNdWx0aU1hcEgAUhJyZXBsaWNhdGVkTXVsdGlNYXASVQoPcmVwb
  GljYXRlZF92b3RlGAogASgLMhUua2FsaXguUmVwbGljYXRlZFZvdGVCE+I/EBIOcmVwbGljYXRlZFZvdGVIAFIOcmVwbGljYXRlZ
  FZvdGVCEQoPcmVwbGljYXRlZF9kYXRhIhMKEVJlcGxpY2F0ZWRDb3VudGVyIjYKElJlcGxpY2F0ZWRSZWdpc3RlchIgCgV2YWx1Z
  RgBIAEoCUIK4j8HEgV2YWx1ZVIFdmFsdWUiNwoNUmVwbGljYXRlZFNldBImCgdlbGVtZW50GAEgASgJQgziPwkSB2VsZW1lbnRSB
  2VsZW1lbnQiKwoNUmVwbGljYXRlZE1hcBIaCgNrZXkYASABKAlCCOI/BRIDa2V5UgNrZXkiMgoUUmVwbGljYXRlZENvdW50ZXJNY
  XASGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa2V5IlUKFVJlcGxpY2F0ZWRSZWdpc3Rlck1hcBIaCgNrZXkYASABKAlCCOI/BRIDa
  2V5UgNrZXkSIAoFdmFsdWUYAiABKAlCCuI/BxIFdmFsdWVSBXZhbHVlIlIKElJlcGxpY2F0ZWRNdWx0aU1hcBIaCgNrZXkYASABK
  AlCCOI/BRIDa2V5UgNrZXkSIAoFdmFsdWUYAiABKAlCCuI/BxIFdmFsdWVSBXZhbHVlIhAKDlJlcGxpY2F0ZWRWb3RlQkgKBWthb
  Gl4Qg5Db21wb25lbnRQcm90b1ABWi1naXRodWIuY29tL2xpZ2h0YmVuZC9rYWxpeC1nby1zZGsva2FsaXg7a2FsaXhiBnByb3RvM
  w=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}