// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package kalix

/** @param eventing
  *   Eventing configuration for a gRPC method.
  * @param view
  *   Views configuration for a gRPC method.
  * @param jwt
  *   JWT validation and signing configuration.
  * @param entity
  *   Entity options
  * @param acl
  *   ACL options
  */
@SerialVersionUID(0L)
final case class MethodOptions(
    eventing: _root_.scala.Option[kalix.Eventing] = _root_.scala.None,
    view: _root_.scala.Option[kalix.View] = _root_.scala.None,
    jwt: _root_.scala.Option[kalix.JwtMethodOptions] = _root_.scala.None,
    entity: _root_.scala.Option[kalix.EntityMethodOptions] = _root_.scala.None,
    acl: _root_.scala.Option[kalix.Acl] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MethodOptions] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (eventing.isDefined) {
        val __value = eventing.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (view.isDefined) {
        val __value = view.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (jwt.isDefined) {
        val __value = jwt.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (entity.isDefined) {
        val __value = entity.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (acl.isDefined) {
        val __value = acl.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      eventing.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      view.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      jwt.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      entity.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      acl.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getEventing: kalix.Eventing = eventing.getOrElse(kalix.Eventing.defaultInstance)
    def clearEventing: MethodOptions = copy(eventing = _root_.scala.None)
    def withEventing(__v: kalix.Eventing): MethodOptions = copy(eventing = Option(__v))
    def getView: kalix.View = view.getOrElse(kalix.View.defaultInstance)
    def clearView: MethodOptions = copy(view = _root_.scala.None)
    def withView(__v: kalix.View): MethodOptions = copy(view = Option(__v))
    def getJwt: kalix.JwtMethodOptions = jwt.getOrElse(kalix.JwtMethodOptions.defaultInstance)
    def clearJwt: MethodOptions = copy(jwt = _root_.scala.None)
    def withJwt(__v: kalix.JwtMethodOptions): MethodOptions = copy(jwt = Option(__v))
    def getEntity: kalix.EntityMethodOptions = entity.getOrElse(kalix.EntityMethodOptions.defaultInstance)
    def clearEntity: MethodOptions = copy(entity = _root_.scala.None)
    def withEntity(__v: kalix.EntityMethodOptions): MethodOptions = copy(entity = Option(__v))
    def getAcl: kalix.Acl = acl.getOrElse(kalix.Acl.defaultInstance)
    def clearAcl: MethodOptions = copy(acl = _root_.scala.None)
    def withAcl(__v: kalix.Acl): MethodOptions = copy(acl = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => eventing.orNull
        case 2 => view.orNull
        case 3 => jwt.orNull
        case 4 => entity.orNull
        case 5 => acl.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => eventing.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => view.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => jwt.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => entity.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => acl.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: kalix.MethodOptions.type = kalix.MethodOptions
    // @@protoc_insertion_point(GeneratedMessage[kalix.MethodOptions])
}

object MethodOptions extends scalapb.GeneratedMessageCompanion[kalix.MethodOptions] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[kalix.MethodOptions] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): kalix.MethodOptions = {
    var __eventing: _root_.scala.Option[kalix.Eventing] = _root_.scala.None
    var __view: _root_.scala.Option[kalix.View] = _root_.scala.None
    var __jwt: _root_.scala.Option[kalix.JwtMethodOptions] = _root_.scala.None
    var __entity: _root_.scala.Option[kalix.EntityMethodOptions] = _root_.scala.None
    var __acl: _root_.scala.Option[kalix.Acl] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __eventing = Option(__eventing.fold(_root_.scalapb.LiteParser.readMessage[kalix.Eventing](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __view = Option(__view.fold(_root_.scalapb.LiteParser.readMessage[kalix.View](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __jwt = Option(__jwt.fold(_root_.scalapb.LiteParser.readMessage[kalix.JwtMethodOptions](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __entity = Option(__entity.fold(_root_.scalapb.LiteParser.readMessage[kalix.EntityMethodOptions](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __acl = Option(__acl.fold(_root_.scalapb.LiteParser.readMessage[kalix.Acl](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    kalix.MethodOptions(
        eventing = __eventing,
        view = __view,
        jwt = __jwt,
        entity = __entity,
        acl = __acl,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[kalix.MethodOptions] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      kalix.MethodOptions(
        eventing = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[kalix.Eventing]]),
        view = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[kalix.View]]),
        jwt = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[kalix.JwtMethodOptions]]),
        entity = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[kalix.EntityMethodOptions]]),
        acl = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[kalix.Acl]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AnnotationsProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AnnotationsProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = kalix.Eventing
      case 2 => __out = kalix.View
      case 3 => __out = kalix.JwtMethodOptions
      case 4 => __out = kalix.EntityMethodOptions
      case 5 => __out = kalix.Acl
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = kalix.MethodOptions(
    eventing = _root_.scala.None,
    view = _root_.scala.None,
    jwt = _root_.scala.None,
    entity = _root_.scala.None,
    acl = _root_.scala.None
  )
  implicit class MethodOptionsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, kalix.MethodOptions]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, kalix.MethodOptions](_l) {
    def eventing: _root_.scalapb.lenses.Lens[UpperPB, kalix.Eventing] = field(_.getEventing)((c_, f_) => c_.copy(eventing = Option(f_)))
    def optionalEventing: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[kalix.Eventing]] = field(_.eventing)((c_, f_) => c_.copy(eventing = f_))
    def view: _root_.scalapb.lenses.Lens[UpperPB, kalix.View] = field(_.getView)((c_, f_) => c_.copy(view = Option(f_)))
    def optionalView: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[kalix.View]] = field(_.view)((c_, f_) => c_.copy(view = f_))
    def jwt: _root_.scalapb.lenses.Lens[UpperPB, kalix.JwtMethodOptions] = field(_.getJwt)((c_, f_) => c_.copy(jwt = Option(f_)))
    def optionalJwt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[kalix.JwtMethodOptions]] = field(_.jwt)((c_, f_) => c_.copy(jwt = f_))
    def entity: _root_.scalapb.lenses.Lens[UpperPB, kalix.EntityMethodOptions] = field(_.getEntity)((c_, f_) => c_.copy(entity = Option(f_)))
    def optionalEntity: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[kalix.EntityMethodOptions]] = field(_.entity)((c_, f_) => c_.copy(entity = f_))
    def acl: _root_.scalapb.lenses.Lens[UpperPB, kalix.Acl] = field(_.getAcl)((c_, f_) => c_.copy(acl = Option(f_)))
    def optionalAcl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[kalix.Acl]] = field(_.acl)((c_, f_) => c_.copy(acl = f_))
  }
  final val EVENTING_FIELD_NUMBER = 1
  final val VIEW_FIELD_NUMBER = 2
  final val JWT_FIELD_NUMBER = 3
  final val ENTITY_FIELD_NUMBER = 4
  final val ACL_FIELD_NUMBER = 5
  def of(
    eventing: _root_.scala.Option[kalix.Eventing],
    view: _root_.scala.Option[kalix.View],
    jwt: _root_.scala.Option[kalix.JwtMethodOptions],
    entity: _root_.scala.Option[kalix.EntityMethodOptions],
    acl: _root_.scala.Option[kalix.Acl]
  ): _root_.kalix.MethodOptions = _root_.kalix.MethodOptions(
    eventing,
    view,
    jwt,
    entity,
    acl
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[kalix.MethodOptions])
}
