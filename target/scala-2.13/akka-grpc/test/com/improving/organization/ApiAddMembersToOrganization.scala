// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.improving.organization

@SerialVersionUID(0L)
final case class ApiAddMembersToOrganization(
    orgId: _root_.scala.Predef.String = "",
    memberToAdd: _root_.scala.Predef.String = "",
    updatingMember: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ApiAddMembersToOrganization] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = orgId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = memberToAdd
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = updatingMember
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = orgId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = memberToAdd
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = updatingMember
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withOrgId(__v: _root_.scala.Predef.String): ApiAddMembersToOrganization = copy(orgId = __v)
    def withMemberToAdd(__v: _root_.scala.Predef.String): ApiAddMembersToOrganization = copy(memberToAdd = __v)
    def withUpdatingMember(__v: _root_.scala.Predef.String): ApiAddMembersToOrganization = copy(updatingMember = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = orgId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = memberToAdd
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = updatingMember
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(orgId)
        case 2 => _root_.scalapb.descriptors.PString(memberToAdd)
        case 3 => _root_.scalapb.descriptors.PString(updatingMember)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.improving.organization.ApiAddMembersToOrganization.type = com.improving.organization.ApiAddMembersToOrganization
    // @@protoc_insertion_point(GeneratedMessage[com.improving.organization.ApiAddMembersToOrganization])
}

object ApiAddMembersToOrganization extends scalapb.GeneratedMessageCompanion[com.improving.organization.ApiAddMembersToOrganization] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.improving.organization.ApiAddMembersToOrganization] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.improving.organization.ApiAddMembersToOrganization = {
    var __orgId: _root_.scala.Predef.String = ""
    var __memberToAdd: _root_.scala.Predef.String = ""
    var __updatingMember: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __orgId = _input__.readStringRequireUtf8()
        case 18 =>
          __memberToAdd = _input__.readStringRequireUtf8()
        case 26 =>
          __updatingMember = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.improving.organization.ApiAddMembersToOrganization(
        orgId = __orgId,
        memberToAdd = __memberToAdd,
        updatingMember = __updatingMember,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.improving.organization.ApiAddMembersToOrganization] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.improving.organization.ApiAddMembersToOrganization(
        orgId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        memberToAdd = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        updatingMember = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = OrganizationApiProto.javaDescriptor.getMessageTypes().get(11)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = OrganizationApiProto.scalaDescriptor.messages(11)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.improving.organization.ApiAddMembersToOrganization(
    orgId = "",
    memberToAdd = "",
    updatingMember = ""
  )
  implicit class ApiAddMembersToOrganizationLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.improving.organization.ApiAddMembersToOrganization]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.improving.organization.ApiAddMembersToOrganization](_l) {
    def orgId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.orgId)((c_, f_) => c_.copy(orgId = f_))
    def memberToAdd: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.memberToAdd)((c_, f_) => c_.copy(memberToAdd = f_))
    def updatingMember: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.updatingMember)((c_, f_) => c_.copy(updatingMember = f_))
  }
  final val ORG_ID_FIELD_NUMBER = 1
  final val MEMBER_TO_ADD_FIELD_NUMBER = 2
  final val UPDATING_MEMBER_FIELD_NUMBER = 3
  def of(
    orgId: _root_.scala.Predef.String,
    memberToAdd: _root_.scala.Predef.String,
    updatingMember: _root_.scala.Predef.String
  ): _root_.com.improving.organization.ApiAddMembersToOrganization = _root_.com.improving.organization.ApiAddMembersToOrganization(
    orgId,
    memberToAdd,
    updatingMember
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[com.improving.organization.ApiAddMembersToOrganization])
}
