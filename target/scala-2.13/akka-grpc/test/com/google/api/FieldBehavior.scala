// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.google.api

/** An indicator of the behavior of a given field (for example, that a field
  * is required in requests, or given as output but ignored as input).
  * This **does not** change the behavior in protocol buffers itself; it only
  * denotes the behavior and may affect how API tooling handles the field.
  *
  * Note: This enum **may** receive new values in the future.
  */
sealed abstract class FieldBehavior(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = FieldBehavior
  def isFieldBehaviorUnspecified: _root_.scala.Boolean = false
  def isOptional: _root_.scala.Boolean = false
  def isRequired: _root_.scala.Boolean = false
  def isOutputOnly: _root_.scala.Boolean = false
  def isInputOnly: _root_.scala.Boolean = false
  def isImmutable: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[FieldBehavior] = com.google.api.FieldBehavior
  final def asRecognized: _root_.scala.Option[com.google.api.FieldBehavior.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.google.api.FieldBehavior.Recognized])
}

object FieldBehavior extends _root_.scalapb.GeneratedEnumCompanion[FieldBehavior] {
  sealed trait Recognized extends FieldBehavior
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[FieldBehavior] = this
  
  /** Conventional default for enums. Do not use this.
    */
  @SerialVersionUID(0L)
  case object FIELD_BEHAVIOR_UNSPECIFIED extends FieldBehavior(0) with FieldBehavior.Recognized {
    val index = 0
    val name = "FIELD_BEHAVIOR_UNSPECIFIED"
    override def isFieldBehaviorUnspecified: _root_.scala.Boolean = true
  }
  
  /** Specifically denotes a field as optional.
    * While all fields in protocol buffers are optional, this may be specified
    * for emphasis if appropriate.
    */
  @SerialVersionUID(0L)
  case object OPTIONAL extends FieldBehavior(1) with FieldBehavior.Recognized {
    val index = 1
    val name = "OPTIONAL"
    override def isOptional: _root_.scala.Boolean = true
  }
  
  /** Denotes a field as required.
    * This indicates that the field **must** be provided as part of the request,
    * and failure to do so will cause an error (usually `INVALID_ARGUMENT`).
    */
  @SerialVersionUID(0L)
  case object REQUIRED extends FieldBehavior(2) with FieldBehavior.Recognized {
    val index = 2
    val name = "REQUIRED"
    override def isRequired: _root_.scala.Boolean = true
  }
  
  /** Denotes a field as output only.
    * This indicates that the field is provided in responses, but including the
    * field in a request does nothing (the server *must* ignore it and
    * *must not* throw an error as a result of the field's presence).
    */
  @SerialVersionUID(0L)
  case object OUTPUT_ONLY extends FieldBehavior(3) with FieldBehavior.Recognized {
    val index = 3
    val name = "OUTPUT_ONLY"
    override def isOutputOnly: _root_.scala.Boolean = true
  }
  
  /** Denotes a field as input only.
    * This indicates that the field is provided in requests, and the
    * corresponding field is not included in output.
    */
  @SerialVersionUID(0L)
  case object INPUT_ONLY extends FieldBehavior(4) with FieldBehavior.Recognized {
    val index = 4
    val name = "INPUT_ONLY"
    override def isInputOnly: _root_.scala.Boolean = true
  }
  
  /** Denotes a field as immutable.
    * This indicates that the field may be set once in a request to create a
    * resource, but may not be changed thereafter.
    */
  @SerialVersionUID(0L)
  case object IMMUTABLE extends FieldBehavior(5) with FieldBehavior.Recognized {
    val index = 5
    val name = "IMMUTABLE"
    override def isImmutable: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends FieldBehavior(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values = scala.collection.immutable.Seq(FIELD_BEHAVIOR_UNSPECIFIED, OPTIONAL, REQUIRED, OUTPUT_ONLY, INPUT_ONLY, IMMUTABLE)
  def fromValue(__value: _root_.scala.Int): FieldBehavior = __value match {
    case 0 => FIELD_BEHAVIOR_UNSPECIFIED
    case 1 => OPTIONAL
    case 2 => REQUIRED
    case 3 => OUTPUT_ONLY
    case 4 => INPUT_ONLY
    case 5 => IMMUTABLE
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = FieldBehaviorProto.javaDescriptor.getEnumTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = FieldBehaviorProto.scalaDescriptor.enums(0)
}