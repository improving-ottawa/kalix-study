syntax = "proto3";

package app.improving.projection;

import "app/improving/projection/common/common_domain.proto";
import "app/improving/projection/view/members_attending_events_for_an_organization_projection.proto";
import "date.proto";
import "google/api/annotations.proto";
import "kalix/annotations.proto";

message EventInfos{
    repeated EventInfo event_infos = 1;
}
message MemberEventsResult {
    map<string, EventInfos> member_events = 1;
    string member_name = 2;
}

message MembersAtEventsOnDay {
    repeated MemberEventsResult member_events_results = 1;
    google.type.Date on_day = 2;
}

service QueryMembersAttendingEventsForAnOrganization {
    option (kalix.codegen) = {
        action: { }
    };

    rpc QueryMembersAttendingEventsForAnOrganization(FindMembersAtEventsOnDayForOrg) returns (MembersAtEventsOnDay)  {
        option (google.api.http) = {
            post: "/org-for-members-attending-events/query"
            body: "org_id"
        };
    }
}
