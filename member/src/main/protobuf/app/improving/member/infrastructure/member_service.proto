syntax = "proto3";


package app.improving.membercontext.member;


import "app/improving/member/api/member_api.proto";
import "common_api.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";

service MemberService {

    option (kalix.codegen) = {
        event_sourced_entity: {
            name: "app.improving.membercontext.member.MemberAPI"
            entity_type: "members"
            state: "app.improving.membercontext.member.MemberState"
            events: [
                "app.improving.membercontext.MemberInfoUpdated",
                "app.improving.membercontext.MemberRegistered",
                "app.improving.membercontext.MemberStatusUpdated",
                "app.improving.membercontext.MemberReleased",
                "app.improving.membercontext.MemberActivated",
                "app.improving.membercontext.MemberInactivated",
                "app.improving.membercontext.MemberSuspended",
                "app.improving.membercontext.MemberTerminated"

            ]
        }
    };


    rpc RegisterMember(ApiRegisterMember) returns (ApiMemberId) {
        option (google.api.http) = {
            post: "/member/register"
            body: "*"
        };
    }

    rpc UpdateMemberStatus(ApiUpdateMemberStatus) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/member/{member_id}/update-status"
            body: "*"
        };
    }

    rpc UpdateMemberInfo(ApiUpdateMemberInfo) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/member/{member_id}/update-info"
            body: "*"
        };
    }

    rpc ReleaseMember(ApiReleaseMember) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/member/{member_id}/delete"
            body: "*"
        };
    }

    rpc ActivateMember(ApiActivateMember) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/member/{member_id}/activate"
            body: "*"
        };
    }

    rpc InactivateMember(ApiInactivateMember) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/member/{member_id}/inactivate"
            body: "*"
        };
    }

    rpc SuspendMember(ApiSuspendMember) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/member/{member_id}/suspend"
            body: "*"
        };
    }

    rpc TerminateMember(ApiTerminateMember) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/member/{member_id}/terminate"
            body: "*"
        };
    }

    rpc GetMemberData(ApiGetMemberData) returns (ApiMemberData) {
        option (google.api.http) = {
            get: "/member/{member_id}/member-data"
        };
    }
}
