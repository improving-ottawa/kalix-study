// This is the public API offered by your entity.
syntax = "proto3";

import "common_api.proto";
import "google/protobuf/timestamp.proto";
import "kalix/annotations.proto";

package app.improving.organizationcontext.organization;

message ApiOrganization {
    ApiOrganizationId oid = 1;
    ApiInfo info = 2;
    ApiOrganizationId parent = 3;
    repeated string member_ids = 4;
    repeated string owner_ids = 5;
    repeated ApiContacts contacts = 6;
    ApiMetaInfo org_meta = 7;
    string name = 8;
    ApiOrganizationStatus status = 9;
}

enum ApiOrganizationStatus {
    API_ORGANIZATION_STATUS_DRAFT = 0;
    API_ORGANIZATION_STATUS_ACTIVE = 1;
    API_ORGANIZATION_STATUS_SUSPENDED = 2;
    API_ORGANIZATION_STATUS_RELEASED = 3;
    API_ORGANIZATION_STATUS_TERMINATED = 4;
}

message ApiInfo {
        string name = 1;
        optional string short_name = 2;
        ApiAddress address = 3;
        optional bool is_private = 4;
        optional string url = 5; // URL type?
        optional string logo = 6; // URL type?
        ApiTenantId tenant = 7;
}

message ApiMetaInfo {
    google.protobuf.Timestamp created_on = 1;
    ApiMemberId created_by = 2;
    google.protobuf.Timestamp last_updated = 3;
    ApiMemberId last_updated_by = 4;
    ApiOrganizationStatus current_status = 5;
    repeated ApiOrganizationId children = 6;
}

message ApiParent {
    ApiOrganizationId org_id = 1 [(kalix.field).entity_key = true];
}

message ApiGetOrganizationInfo {
    ApiOrganizationId org_id = 1 [(kalix.field).entity_key = true];
}

message ApiGetOrganizationById {
    ApiOrganizationId org_id = 1 [(kalix.field).entity_key = true];
}

message ApiContacts {
    repeated ApiMemberId primary_contacts = 1;
    repeated ApiMemberId billing_contacts = 2;
    repeated ApiMemberId distribution_contacts = 3;
}

message ApiUpdateInfo {
    optional string name = 1;
    optional string short_name = 2;
    optional ApiAddress address = 3;
    optional bool is_private = 4;
    optional string url = 5; // URL type?
    optional string logo = 6; // URL type?
    optional ApiTenantId tenant = 7;
}

message ApiUpdateParent {
    ApiOrganizationId org_id = 1 [(kalix.field).entity_key = true];
    ApiOrganizationId new_parent = 2;
    ApiMemberId updating_member = 3;
}

message ApiAddMembersToOrganization {
    ApiOrganizationId org_id = 1 [(kalix.field).entity_key = true];
    repeated ApiMemberId members_to_add = 2;
    ApiMemberId updating_member = 3;
}

message ApiAddOwnersToOrganization {
    ApiOrganizationId org_id = 1 [(kalix.field).entity_key = true];
    repeated ApiMemberId owners_to_add = 2;
    ApiMemberId updating_member = 3;
}

message ApiEditOrganizationInfo {
    ApiOrganizationId org_id = 1 [(kalix.field).entity_key = true];
    ApiUpdateInfo new_info = 2;
    ApiMemberId editing_member = 3;
}

message ApiEstablishOrganization {
    ApiOrganizationId org_id = 1 [(kalix.field).entity_key = true];
    ApiInfo info = 2;
    optional ApiParent parent = 3;
    repeated ApiMemberId members = 4;
    repeated ApiMemberId owners = 5;
    repeated ApiContacts contacts = 6;
    ApiMemberId establishing_member = 7;
}

message ApiRemoveOwnersFromOrganization {
    ApiOrganizationId org_id = 1 [(kalix.field).entity_key = true];
    repeated ApiMemberId owners_to_remove = 2;
    ApiMemberId updating_member = 3;

}

message ApiRemoveMembersFromOrganization {
    ApiOrganizationId org_id = 1 [(kalix.field).entity_key = true];
    repeated ApiMemberId members_to_remove = 2;
    ApiMemberId updating_member = 3;
}

message ApiOrganizationStatusUpdated {
    ApiOrganizationId org_id = 1 [(kalix.field).entity_key = true];
    ApiOrganizationStatus new_status = 2;
    ApiMemberId updating_member = 3;
}

message ApiReleaseOrganization {
    ApiOrganizationId org_id = 1;
    ApiMemberId releasing_member = 2;
}

message ApiOrganizationListByMember {
    ApiMemberId member = 1;
    repeated ApiOrganizationId organizations = 2;
}

message ApiOrganizationListByOwner {
    ApiMemberId owner = 1;
    repeated ApiOrganizationId organizations = 2;
}

