            "SELECT"
             " members.info AS member"
             "FROM members "
             "JOIN orders ON orders.meta.memberId = members.member_id "
             "JOIN products ON products.product_id = ANY(orders.lineItems.product.id) "
             "JOIN events ON products.info.event.id = events.event_id "
             "WHERE :given_time >= events.info.expectedStart AND :given_time < events.info.expectedEnd "

message ApiMemberData  {
    ApiMemberId memberId = 1;
    ApiUpdateInfo info = 2;
    ApiMetaInfo meta = 3;
}

message ApiOrder {
    string order_id = 1 [(kalix.field).entity_key = true];
    ApiOrderInfo info = 2;
    ApiOrderMetaInfo meta = 3;
    ApiOrderStatus status = 4;
}

message ApiLineItem {
    ApiProductId product = 1;
    int32     quantity = 2;
    double    lineTotal = 3;
}

message ApiOrderInfo {
    string order_id = 1 [(kalix.field).entity_key = true];
    repeated ApiLineItem lineItems = 2;
    string specialInstructions = 3;
    double orderTotal = 4;
}

message ApiOrderMetaInfo  {
    string order_id = 1 [(kalix.field).entity_key = true];
    ApiMemberId memberId = 2;
    ApiStoreId storeId = 3;
    google.protobuf.Timestamp createdOn = 4;
    ApiMemberId lastModifiedBy = 5;
    google.protobuf.Timestamp lastModifiedOn = 6;
    ApiOrderStatus status = 7;
}

message ApiProduct {
    string sku = 1 [(kalix.field).entity_key = true];
    ApiProductInfo info = 2;
    ApiProductMetaInfo meta = 3;
    ApiProductStatus status = 4;
}
message ApiProductInfo {
    string sku = 1 [(kalix.field).entity_key = true];
    string  name = 2;
    string  description = 3;
    string section = 4;
    string row = 5;
    string seat = 6;
    ApiEventId event = 7;
    repeated string image = 8;
    double price = 9;
    double cost = 10;
    ApiStoreId store = 11;
}


message ApiEvent {
    string event_id = 1 [(kalix.field).entity_key = true];
    ApiEventInfo info = 2;
    ApiEventMetaInfo meta = 3;
    ApiEventStatus status = 4;
}

message ApiEventInfo {
    string eventName = 1;
    string description = 2;
    string eventURL = 3;
    ApiOrganizationId sponsoringOrg = 4;
    ApiGeoLocation geoLocation = 5;
    ApiReservationId reservation = 6;
    google.protobuf.Timestamp expectedStart = 7;
    google.protobuf.Timestamp expectedEnd = 8;
    bool isPrivate = 9;
}

message ApiEventMetaInfo {
    ApiMemberId scheduledBy = 1;
    google.protobuf.Timestamp scheduledOn = 2;
    ApiMemberId lastModifiedBy = 3;
    google.protobuf.Timestamp lastModifiedOn = 4;
    google.protobuf.Timestamp actualStart = 5;
    google.protobuf.Timestamp actualEnd = 6;
    ApiEventStatus status = 7;
}

"SELECT "
                    "members.memberId AS memberId "
                    "members.info AS info "
                    "members.meta AS meta "
                    "members.meta.memberStatus AS status "
                    "FROM members "
                    "JOIN orders ON orders.meta.memberId.memberId = members.memberId.memberId "
                    "JOIN products ON products.sku = ANY(orders.lineItems.product.product_id) "
                    "JOIN events ON products.info.event.eventId = events.eventId "
                    "WHERE :eventTime = events.info.expectedEnd"


Error reported from Kalix system: KLX-00107 Incompatible types in View app.improving.membercontext.MemberByEventQuery.FindMembersByEventTime. View cannot be projected into result type:
* Projected field [order_id] with type [string] not found in result type [app.improving.membercontext.member.ApiMemberData]
* Projected field [info] has type [message app.improving.ordercontext.order.ApiOrderInfo] but result field has type [message app.improving.membercontext.member.ApiUpdateInfo] in [app.improving.membercontext.member.ApiMemberData]
* Projected field [meta] has type [message app.improving.ordercontext.order.ApiOrderMetaInfo] but result field has type [message app.improving.membercontext.member.ApiMetaInfo] in [app.improving.membercontext.member.ApiMemberData]
* Projected field [status] with type [enum app.improving.ordercontext.order.ApiOrderStatus] not found in result type [app.improving.membercontext.member.ApiMemberData]
* Projected field [sku] with type [string] not found in result type [app.improving.membercontext.member.ApiMemberData]
* Projected field [info] has type [message app.improving.productcontext.product.ApiProductInfo] but result field has type [message app.improving.membercontext.member.ApiUpdateInfo] in [app.improving.membercontext.member.ApiMemberData]
* Projected field [meta] has type [message app.improving.productcontext.product.ApiProductMetaInfo] but result field has type [message app.improving.membercontext.member.ApiMetaInfo] in [app.improving.membercontext.member.ApiMemberData]
* Projected field [status] with type [enum app.improving.productcontext.product.ApiProductStatus] not found in result type [app.improving.membercontext.member.ApiMemberData]
* Projected field [event_id] with type [string] not found in result type [app.improving.membercontext.member.ApiMemberData]
* Projected field [info] has type [message app.improving.eventcontext.event.ApiEventInfo] but result field has type [message app.improving.membercontext.member.ApiUpdateInfo] in [app.improving.membercontext.member.ApiMemberData]
* Projected field [meta] has type [message app.improving.eventcontext.event.ApiEventMetaInfo] but result field has type [message app.improving.membercontext.member.ApiMetaInfo] in [app.improving.membercontext.member.ApiMemberData]
* Projected field [status] with type [enum app.improving.eventcontext.event.ApiEventStatus] not found in result type [app.improving.membercontext.member.ApiMemberData]

            query: "SELECT * "
                    "FROM member_by_event_event  "
                    "JOIN member_by_event_product ON member_by_event_product.info.event.event_id = member_by_event_event.event_id "
                    "JOIN member_by_event_order ON member_by_event_product.sku = member_by_event_order.order_id "
                    "JOIN member_by_event_member ON member_by_event_order.meta.memberId.member_id = member_by_event_member.memberId.member_id "
                    "WHERE :eventTime >= member_by_event_event.info.expectedStart AND :eventTime < member_by_event_event.info.expectedEnd "


                "SELECT * "
                                    "FROM  member_by_event_member"
                                    "JOIN member_by_event_product ON member_by_event_product.info.event.event_id = member_by_event_event.event_id "
                                    "JOIN member_by_event_order ON member_by_event_product.sku = member_by_event_order.order_id "
                                    "JOIN member_by_event_event ON member_by_event_order.meta.memberId.member_id = member_by_event_member.memberId.member_id "
                                    "WHERE :eventTime >= member_by_event_event.info.expectedStart AND :eventTime < member_by_event_event.info.expectedEnd "

"SELECT * "
                    "FROM  member_by_event_member "
                    "JOIN member_by_event_order ON member_by_event_order.meta.memberId.member_id = member_by_event_member.memberId.member_id "
                    "JOIN member_by_event_product ON member_by_event_product.sku = ANY(member_by_event_order.lineItems.product.product_id) "
                    "JOIN member_by_event_event ON member_by_event_product.info.event.event_id = member_by_event_event.event_id "
                    "WHERE :eventTime >= member_by_event_event.info.expectedStart AND :eventTime < member_by_event_event.info.expectedEnd "


                    "SELECT "
                                        "member_by_event_member.member_id AS member_id, "
                                        "member_by_event_member.info AS info, "
                                        "member_by_event_member.meta AS meta "
                                        "FROM  member_by_event_member "
                                        "JOIN member_by_event_order ON member_by_event_order.meta.memberId.member_id = member_by_event_member.member_id "
                                        "JOIN member_by_event_product ON member_by_event_product.sku = member_by_event_order.order_id "
                                        "JOIN member_by_event_event ON member_by_event_product.info.event.event_id = member_by_event_event.event_id "
                                        "WHERE :eventTime >= member_by_event_event.info.expectedStart AND :eventTime < member_by_event_event.info.expectedEnd "

