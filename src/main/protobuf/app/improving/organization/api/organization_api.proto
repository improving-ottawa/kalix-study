// This is the public API offered by your entity.
syntax = "proto3";

import "app/improving/common/common_api.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "kalix/annotations.proto";
import "google/api/annotations.proto";

package app.improving.organizationcontext.organization;

message ApiOrganization {
    ApiOrganizationId oid = 1;
    ApiInfo info = 2;
    ApiOrganizationId parent = 3;
    repeated string member_ids = 4;
    repeated string owner_ids = 5;
    repeated ApiContacts contacts = 6;
    ApiMetaInfo orgMeta = 7;
    string name = 8;
    ApiOrganizationStatus status = 9;
}

enum ApiOrganizationStatus {
    DRAFT = 0;
    ACTIVE = 1;
    SUSPENDED = 2;
    TERMINATED = 3;
}

message ApiInfo {
        string name = 1;
        string shortName = 2;
        ApiAddress address = 3;
        bool isPrivate = 4;
        string url = 5; // URL type?
        string logo = 6; // URL type?
}

message ApiMetaInfo {
    google.protobuf.Timestamp createdOn = 1;
    ApiMemberId createdBy = 2;
    google.protobuf.Timestamp   lastUpdated = 3;
    ApiMemberId lastUpdatedBy = 4;
    ApiOrganizationStatus currentStatus = 5;
    repeated ApiOrganizationId children = 6;
}

message ApiOrganizationId {
    string org_id = 1 [(kalix.field).entity_key = true];
}

message ApiParent {
    string org_id = 1 [(kalix.field).entity_key = true];
}

message ApiGetOrganizationInfo {
    string org_id = 1 [(kalix.field).entity_key = true];
}

message ApiContacts {
    repeated ApiMemberId primaryContacts = 1;
    repeated ApiMemberId billingContacts = 2;
    repeated ApiMemberId distributionContacts = 3;
}

message ApiUpdateInfo {
    string name = 1;
    string shortName = 2;
    ApiAddress address = 3;
    bool isPrivate = 4;
    string url = 5; // URL type?
    string logo = 6; // URL type?
}

message ApiUpdateParent {
    string org_id = 1 [(kalix.field).entity_key = true];
    ApiOrganizationId newParent = 2;
}

message ApiAddMembersToOrganization {
    string org_id = 1 [(kalix.field).entity_key = true];
    repeated ApiMemberId membersToAdd = 2;
    ApiMemberId updatingMember = 3;
}

message ApiAddOwnersToOrganization {
    string org_id = 1 [(kalix.field).entity_key = true];
    repeated ApiMemberId ownersToAdd = 2;
    ApiMemberId updatingMember = 3;
}

message ApiEditOrganizationInfo {
    string org_id = 1 [(kalix.field).entity_key = true];
    ApiUpdateInfo newInfo = 2;
    ApiMemberId editingMember = 3;
}

message ApiEstablishOrganization {
    string org_id = 1 [(kalix.field).entity_key = true];
    ApiInfo info = 2;
    ApiParent parent = 3;
    repeated ApiMemberId members = 4;
    repeated ApiMemberId owners = 5;
    repeated ApiContacts contacts = 6;
    ApiMemberId establishingMember = 7;
    ApiMetaInfo meta = 8;
}

message ApiRemoveOwnersFromOrganization {
    string org_id = 1 [(kalix.field).entity_key = true];
    repeated ApiMemberId ownersToRemove = 2;
    ApiMemberId updatingMember = 3;

}

message ApiRemoveMembersFromOrganization {
    string org_id = 1 [(kalix.field).entity_key = true];
    repeated ApiMemberId membersToRemove = 2;
    ApiMemberId updatingMember = 3;
}

message ApiOrganizationStatusUpdated {
    string org_id = 1 [(kalix.field).entity_key = true];
    ApiOrganizationStatus newStatus = 2;
}

message ApiOrganizationListByMember {
    ApiMemberId member = 1;
    repeated ApiOrganizationId organizations = 2;
}

message ApiOrganizationListByOwner {
    ApiMemberId owner = 1;
    repeated ApiOrganizationId organizations = 2;
}

