syntax = "proto3";

import "app/improving/tenant/api/tenant_api.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";
import "google/api/annotations.proto";

package app.improving.tenantcontext.tenant;

service TenantService {

    option (kalix.codegen) = {
        event_sourced_entity: {
            name: "app.improving.tenantcontext.tenant.TenantAPI"
            entity_type: "tenants"
            state: "app.improving.tenantcontext.tenant.TenantState"
            events: [
                "app.improving.tenantcontext.TenantEstablished",
                "app.improving.tenantcontext.TenantActivated",
                "app.improving.tenantcontext.TenantSuspended",
                "app.improving.tenantcontext.PrimaryContactUpdated",
                "app.improving.tenantcontext.TenantNameChanged"]
        }
    };

    rpc EstablishTenant(ApiEstablishTenant) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/tenant/{tenant_id}/establish-tenant"
            body: "info"
        };
    }

    rpc ActivateTenant(ApiActivateTenant) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/tenant/{tenant_id}/activate-tenant"
            body: "updatingUser"
        };
    }

    rpc SuspendTenant(ApiSuspendTenant) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/tenant/{tenant_id}/suspend-tenant"
            body: "updatingUser"
        };
    }

    rpc UpdatePrimaryContact(ApiUpdatePrimaryContact) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/tenant/{tenant_id}/update-primary-contact"
            body: "*"
        };
    }

    rpc ChangeTenantName(ApiChangeTenantName) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/tenant/{tenant_id}/change-name"
            body: "*"
        };
    }
}