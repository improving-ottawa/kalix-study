syntax = "proto3";

import "common_domain.proto";
import "google/protobuf/timestamp.proto";

package app.improving.storecontext;

enum StoreStatus {
    STORE_STATUS_DRAFT = 0;
    STORE_STATUS_READY = 1;
    STORE_STATUS_OPEN = 2;
    STORE_STATUS_CLOSED = 3;
    STORE_STATUS_DELETED = 4;
    STORE_STATUS_RELEASED = 5;
    STORE_STATUS_UNKNOWN = 6;
}

message StoreInfo {
    StoreId store_id = 1;
    string  name = 2;
    string  description = 3;
    repeated ProductId products = 4;
    EventId  event = 5;
    VenueId venue = 6;
    LocationId location = 7;
    OrganizationId sponsoring_org = 8;
}

message StoreUpdateInfo {
    optional string  name = 1;
    optional string description = 2;
    repeated ProductId products = 3;
    optional EventId event = 4;
    optional VenueId venue = 5;
    optional LocationId location = 6;
    optional OrganizationId sponsoring_org = 7;
}

message StoreMetaInfo {
    MemberId created_by = 1;
    google.protobuf.Timestamp created_on = 2;
    MemberId last_modified_by = 3;
    google.protobuf.Timestamp last_modified_on = 4;
    StoreStatus status = 5;
}

message StoreCreated {
    StoreId store_id = 1;
    StoreInfo info = 2;
    StoreMetaInfo meta = 3;
}
message StoreUpdated {
    StoreId store_id = 1;
    StoreInfo info = 2;
    StoreMetaInfo meta = 3;
}
message StoreDeleted {
    StoreId store_id = 1;
    StoreMetaInfo meta = 2;
}
message StoreMadeReady {
    StoreId store_id = 1;
    StoreInfo info = 2;
    StoreMetaInfo meta = 3;
}
message StoreOpened {
    StoreId store_id = 1;
    StoreInfo info = 2;
    StoreMetaInfo meta = 3;
}
message StoreClosed {
    StoreId store_id = 1;
    StoreInfo info = 2;
    StoreMetaInfo meta = 3;
}
message StoreReleased {
    StoreId store_id = 1;
    MemberId releasing_member = 2;
}
message ProductsAddedToStore {
    StoreId store_id = 1;
    StoreInfo info = 2;
    StoreMetaInfo meta = 3;
}
message ProductsRemovedFromStore {
    StoreId store_id = 1;
    StoreInfo info = 2;
    StoreMetaInfo meta = 3;
}
message GetProductsInStore {
    StoreId store_id = 1;
}
message ProductsInStore {
    StoreId store_id = 1;
    repeated ProductId products = 2;
}